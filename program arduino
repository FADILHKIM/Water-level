#include <WiFi.h>
#include <HTTPClient.h>

#define TRIGGER_PIN  13
#define ECHO_PIN     12

const int MAX_DISTANCE = 430; // Jarak maksimum antara sensor dan air dalam cm
const int MIN_DISTANCE = 20;   // Jarak minimum antara sensor dan air dalam cm
String sensorID = "WL001";    // ID sensor

const char* ssid = "Nama wifi anda";
const char* password = "password wifi anda";
const char* serverURL = "http://203.000.00.0/ma/tes2/apiwl.php"; // URL server anda

unsigned long lastUploadTime = 0;  // Waktu terakhir data dikirim
const unsigned long uploadInterval = 15 * 60 * 1000;  // Interval pengiriman data (15 menit)

void setup() {
  Serial.begin(9600);
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  // Koneksi WiFi
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  long duration, distance;

  // Kirim sinyal trigger
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);

  // Baca waktu pulsa dari sinyal echo
  duration = pulseIn(ECHO_PIN, HIGH);

  // Hitung jarak berdasarkan waktu puls
  distance = (duration * 0.0343) / 2;

  // Batasi nilai jarak antara MIN_DISTANCE dan MAX_DISTANCE
  distance = constrain(distance, MIN_DISTANCE, MAX_DISTANCE);

  // Hitung persentase berdasarkan jarak sensor ke air
  int waterLevelPercentage = map(distance, MIN_DISTANCE, MAX_DISTANCE, 100, 0);

  // Tampilkan hasil di Serial Monitor
  Serial.print("Tinggi Air: ");
  Serial.print(MAX_DISTANCE - distance);
  Serial.print(" cm | Presentase: ");
  Serial.print(waterLevelPercentage);
  Serial.println("%");

  // Cek apakah sudah waktunya mengirim data
  unsigned long currentTime = millis();
  if (currentTime - lastUploadTime >= uploadInterval) {
    // Kirim data ke server jika terhubung ke WiFi dengan RSSI di atas -70
    if (WiFi.status() == WL_CONNECTED && WiFi.RSSI() > -80) {
      HTTPClient http;

      // Format data untuk dikirim
      String postData = "idhardware=" + sensorID + "&tinggi=" + String(MAX_DISTANCE - distance) + "&presentase=" + String(waterLevelPercentage) + ;


      // Kirim HTTP POST request ke server
      http.begin(serverURL);
      http.addHeader("Content-Type", "application/x-www-form-urlencoded");
      int httpResponseCode = http.POST(postData);

      // Tampilkan hasil dari server
      Serial.println("HTTP Response Code: " + String(httpResponseCode));
      Serial.println("Server Response: " + http.getString());

      // Tambahkan status pengiriman data ke MySQL
      if (httpResponseCode == 200) {
        Serial.println("Data berhasil dikirim ke server dan disimpan di MySQL");
      } else {
        Serial.println("Gagal mengirim data ke server atau menyimpan ke MySQL");
      }

      // Selesai dengan request
      http.end();

      // Perbarui waktu terakhir data dikirim
      lastUploadTime = currentTime;
    } else {
      Serial.println("WiFi Disconnected or Weak Signal (RSSI <= -80)");
    }
  }

  // Tunggu 1 detik sebelum membaca ulang
  delay(1000);
}
